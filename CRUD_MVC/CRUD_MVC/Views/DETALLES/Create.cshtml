@model CRUD_MVC.Models.DETALLES

@using CRUD_MVC.Models;

@{
    ViewBag.Title = "Create";
}

@{
    var listadoCodigoProductos = (List<int>)ViewData["codigoProducto"];
    var listadoNombreProductos = (List<String>)ViewData["nombreProducto"];
    var listadoValorUnitarioProductos = (List<int>)ViewData["valorUnitarioProducto"];

}


<h2>Crear nueva Factura</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="col-md-13">
            <div class="row">
                <div class="col-sm-6">
                    <h4>FACTURA</h4>
                    <div id="error-alert"></div>
                    <hr />
                    <div class="form-group">
                        @Html.LabelFor(model => model.FACTURAS.NumeroFactura, htmlAttributes: new { @class = "control-label col-md-6" })
                        @Html.EditorFor(model => model.FACTURAS.NumeroFactura, new { htmlAttributes = new { @class = "form-control", Name = "numeroFactura" } })
                        <span class="field-validation-valid text-danger" data-valmsg-for="numeroFactura" data-valmsg-replace="true" id="numeroFactura"></span>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.FACTURAS.Fecha, htmlAttributes: new { @class = "control-label col-md-6" })
                        @Html.EditorFor(model => model.FACTURAS.Fecha, new { htmlAttributes = new { @class = "form-control", @type = "date", Name = "Fecha" } })
                        <span class="field-validation-valid text-danger" data-valmsg-for="Fecha" data-valmsg-replace="true"></span>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.FACTURAS.NombreCliente, htmlAttributes: new { @class = "control-label col-md-6" })
                        @Html.EditorFor(model => model.FACTURAS.NombreCliente, new { htmlAttributes = new { @class = "form-control", Name = "NombreCliente" } })
                        <span class="field-validation-valid text-danger" data-valmsg-for="NombreCliente" data-valmsg-replace="true"></span>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FACTURAS.DocumentoCliente, htmlAttributes: new { @class = "control-label col-md-6" })
                        @Html.EditorFor(model => model.FACTURAS.DocumentoCliente, new { htmlAttributes = new { @class = "form-control", Name = "DocumentoCliente" } })
                        <span class="field-validation-valid text-danger" data-valmsg-for="DocumentoCliente" data-valmsg-replace="true"></span>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.FACTURAS.TipoDePago, htmlAttributes: new { @class = "control-label col-md-6" })
                        @Html.EditorFor(model => model.FACTURAS.TipoDePago, new { htmlAttributes = new { @class = "form-control", Name = "TipoDePago" } })
                        <span class="field-validation-valid text-danger" data-valmsg-for="TipoDePago" data-valmsg-replace="true"></span>

                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.FACTURAS.Descuento, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.FACTURAS.Descuento, new { htmlAttributes = new { @class = "form-control", Name = "Descuento" } })
                        <span class="field-validation-valid text-danger" data-valmsg-for="Descuento" data-valmsg-replace="true"></span>

                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.FACTURAS.IVA, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.FACTURAS.IVA, new { htmlAttributes = new { @class = "form-control", Name = "IVA" } })
                        <span class="field-validation-valid text-danger" data-valmsg-for="IVA" data-valmsg-replace="true"></span>

                    </div>

                </div>
                <div class="col-sm-1"></div>
                    <div class="col-sm-5">
                        <h4>PRODUCTOS</h4>
                        <hr />
                        <div class="row">

                            <div class="alert alert-primary" role="alert">
                                <b>Información: </b> En esta tabla se encuentra el listado de productos que podrás escoger para realizar la factura. Es obligatorio almenos escoger uno de estos productos.
                            </div>

                           


                            <div class="table-responsive">
                                <table class="table">
                                    <thead class="thead-dark">
                                        <tr>
                                            <th scope="col">Nombre del Producto</th>
                                            <th scope="col">Cantidad</th>
                                            <th scope="col">Precio Unitario</th>
                                        </tr>
                                    </thead>


                                    @for (int i = 0; i < (int)ViewData["cantidadProductos"]; i++)
                                    {
                                        <tr>
                                            <td scope="row">
                                                <label> @listadoNombreProductos[i] </label>
                                            </td>

                                            <td scope="row">
                                                <input class="cantidadProducto form-control" type="number" name="cantidadProducto[@i]" value="0" />
                                            </td>


                                            <td scope="row">
                                                <input class="precioUnitario form-control" type="number" name="precioUnitario[@i]" value="0" />
                                            </td>

                                        </tr>
                                    }

                                </table>
                            </div>
                        </div>

                    </div>

                </div>




                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" onClick="validate()" value="Crear factura" class="btn btn-primary active" />
                        <input type="button" value="Volver a la lista" class="btn btn-warning active" onclick="location.href='@Url.Action("Index", "FACTURAS")'" />

                    </div>
                </div>
            </div>
    </div>

}

<script type="text/javascript">
    document.getElementById('FACTURAS_Fecha').min = new Date(new Date().getTime()).toISOString().split("T")[0];

    function validate() {
        var c = document.getElementsByClassName('cantidadProducto form-control')
        let totalCount = 0;
       
        for (i = 0; i < c.length; i++) {
            console.log(c[i].value)
            if (c[i].value >= 0) {
                if (c[i].value > 0) {
                    totalCount++
                }
            } 

            if (c[i].value < 0) {
                myAle("No es posible utilizar valores negativos.")
                return;
            }


        }
        if (totalCount == 0) {
            myAle("Recuerda utilizar al menos un producto.")
            return;
        }

        //Validación de formulario general
        if (document.getElementsByName("numeroFactura")[0].value == "") {
            myAle("El campo número de factura está vacío")
            return;
        }

        if (document.getElementsByName("NombreCliente")[0].value == "") {
            myAle("El campo nombre de cliente está vacío")
            return;
        }

        if (document.getElementsByName("DocumentoCliente")[0].value == "") {
            myAle("El cambpo documento de cliente está vacío")
            return;
        }

        if (document.getElementsByName("TipoDePago")[0].value == "") {
            myAle("El campo tipo de pago está vacío")
            return;
        }

        if (document.getElementsByName("Descuento")[0].value == "") {
            myAle("El campo descuento está vacío")
            return;
        }


        if (document.getElementsByName("IVA")[0].value == "") {
            myAle("El campo IVA está vacío")
            return;
        }
        document.getElementById("form").submit();
    }

    function myAle(msg) {
        document.getElementById("error-alert").innerHTML=`<div class='alert alert-danger' role='alert'>${msg}</div>`
    }
</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
